## Begin grub-common.cfg

#  Copyright (C) 2021 Andriy Dobush <andriyd@nvidia.com>
#  Copyright (C) 2014,2018 Curt Brune <curt@cumulusnetworks.com>
#  Copyright (C) 2015,2016,2017 david_yang <david_yang@accton.com>
#
#  SPDX-License-Identifier:     GPL-2.0

set timeout=%%GRUB_TIMEOUT%%

onie_submenu="ONIE (Version: $onie_version)"

onie_menu_install="ONIE: Install OS"
export onie_menu_install
onie_menu_rescue="ONIE: Rescue"
export onie_menu_rescue
onie_menu_uninstall="ONIE: Uninstall OS"
export onie_menu_uninstall
onie_menu_update="ONIE: Update ONIE"
export onie_menu_update
onie_menu_embed="ONIE: Embed ONIE"
export onie_menu_embed

onie_menu_shasta="Start SHASTA"
export onie_menu_shasta

set fallback="${onie_menu_rescue}"

onie_quiet="quiet"
onie_linux="/onie/vmlinuz-${onie_kernel_version}-onie"
onie_initrd="/onie/initrd.img-${onie_kernel_version}-onie"

function onie_entry_start {
  insmod gzio
  insmod ext2
  if [ "$onie_partition_type" = "gpt" ] ; then
    insmod part_gpt
    set root='(hd0,gpt2)'
  else
    insmod part_msdos
    set root='(hd0,msdos1)'
  fi
  search --no-floppy --label --set=root ONIE-BOOT
}

function onie_entry_end {
  echo "Platform  : $onie_build_platform"
  echo "Version   : $onie_version"
  echo "Build Date: $onie_build_date"
}

function onie_bootcmd {
  onie_entry_start
  if [ "$onie_boot_reason" = "install" ] ; then
    echo "ONIE: OS Install Mode ..."
  elif [ "$onie_boot_reason" = "rescue" ] ; then
    echo "ONIE: Rescue Mode ..."
  elif [ "$onie_boot_reason" = "uninstall" ] ; then
    echo "ONIE: OS Uninstall Mode ..."
  elif [ "$onie_boot_reason" = "update" ] ; then
    echo "ONIE: ONIE Update Mode ..."
  elif [ "$onie_boot_reason" = "embed" ] ; then
    echo "ONIE: ONIE Embed Mode ..."
  else
    echo "ERROR: Unsupported ONIE boot mode: $onie_boot_reason"
    return 1
  fi
  if [ -z "$GRUB_ONIE_CMDLINE_LINUX" ] ; then
    onie_args="$onie_quiet $onie_initargs $onie_initargs_default $onie_platformargs $ONIE_EXTRA_CMDLINE_LINUX"
  else
    onie_args="$GRUB_ONIE_CMDLINE_LINUX $ONIE_EXTRA_CMDLINE_LINUX"
  fi
  linux   $onie_linux $onie_args boot_reason=$onie_boot_reason $onie_debugargs
  initrd  $onie_initrd
  onie_entry_end
  boot
}

function onie_install {
  onie_boot_reason="install"
  onie_bootcmd
}

function onie_rescue {
  onie_boot_reason="rescue"
  onie_bootcmd
}

function onie_uninstall {
  onie_boot_reason="uninstall"
  onie_bootcmd
}

function onie_update {
  onie_boot_reason="update"
  onie_bootcmd
}

function onie_embed {
  onie_boot_reason="embed"
  onie_bootcmd
}

function reset_onie_mode {
   set onie_mode="none"
   save_env onie_mode
}

# arg 1: data path
# arg 2: primary/secondary type
function onie_shasta_boot {
  data_path=$1
  sel_type=$2

  sha256sum -c ${data_path}/vmlinuz.sha256sum
  sec_vmlinuz_verify=$?

  sha256sum -c ${data_path}/FirmwareBundle.sha256sum
  sec_bundle_verify=$?

  sha256sum -c ${data_path}/shasta_app.tgz.sha256sum
  sec_app_verify=$?

  if [ ( 0 -eq ${sec_vmlinuz_verify} ) -a ( 0 -eq ${sec_bundle_verify} ) -a ( 0 -eq ${sec_app_verify} ) ]; then
    echo "${sel_type} verify OK, start ${sel_type}..."
    echo "======================================================"

    linux ${data_path}/vmlinuz max_loop=255 console=ttyS0,115200 root=/dev/sda3 rw rootwait

    return 0
  fi

  return -1
}

function onie_shasta {
  reset_onie_mode

  search --file /usr/local/bin/hal --set root
  search --file /bundleprimary/vmlinuz --set shasta_data_disk

  set shasta_data_disk="(${shasta_data_disk})"
  primary_args="${shasta_data_disk}/bundleprimary primary"
  secondary_args="${shasta_data_disk}/bundlebackup secondary"

  if [ -e ${shasta_data_disk}/bundlebackup/active ]; then
    if ! onie_shasta_boot ${secondary_args}; then
      onie_shasta_boot ${primary_args}
    fi
  else
    if ! onie_shasta_boot ${primary_args}; then
      onie_shasta_boot ${secondary_args}
    fi
  fi
}

# Load environment variables
# Use --skip-sig to allow booting of preconfigured options.
load_env --skip-sig

# The default GRUB boot entry is controlled by two persistent grub
# environment variables, "onie_mode" and "onie_nos_mode".  If
# onie_mode is set, it controls which GRUB menu to load by default.
# If onie_mode is clear, then nos_mode is consulted.  If onie_nos_mode
# is "yes", then the GRUB menu will default to "rescue" mode.  If both
# variables are clear the default GRUB menu is "install mode".

if [ "$onie_mode" = "install" ] ; then
   set default="${onie_menu_install}"
elif [ "$onie_mode" = "uninstall" ] ; then
   set default="${onie_menu_uninstall}"
   # clear uninstall mode after one boot attempt
   reset_onie_mode
elif [ "$onie_mode" = "update" ] ; then
   set default="${onie_menu_update}"
elif [ "$onie_mode" = "embed" ] ; then
   set default="${onie_menu_embed}"
elif [ "$onie_mode" = "rescue" ] ; then
   set default="${onie_menu_rescue}"
   # clear rescue mode after one boot attempt
   reset_onie_mode
elif [ "$onie_mode" = "diag" ] ; then
   if [ -n "$diag_menu" ] ; then
       set default="${diag_menu}"
   fi
   reset_onie_mode
else
   # Consult nos_mode
   if [ "$onie_nos_mode" = "yes" ] ; then
      set default="${onie_menu_rescue}"
   fi
fi

# --unrestricted = useable without a password
menuentry "$onie_menu_shasta" --unrestricted {
  onie_shasta
}

menuentry "$onie_menu_install" --unrestricted {
  onie_debugargs=""
  onie_install
}

menuentry "$onie_menu_rescue" --unrestricted {
  onie_debugargs=""
  onie_rescue
}

menuentry "$onie_menu_uninstall" --unrestricted {
  onie_debugargs=""
  onie_uninstall
}

menuentry "$onie_menu_update" --unrestricted {
  onie_debugargs=""
  onie_update
}

menuentry "$onie_menu_embed" --unrestricted {
  onie_debugargs=""
  onie_embed
}

if [ -n "$diag_menu" ] ; then
  menuentry "$diag_menu" {
    diag_bootcmd
  }
fi

## End grub-common.cfg
